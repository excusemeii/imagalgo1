package org.apache.jsp.Student_0020Zone;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class pancake_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();

  private static java.util.List<String> _jspx_dependants;

  private org.glassfish.jsp.api.ResourceInjector _jspx_resourceInjector;

  public java.util.List<String> getDependants() {
    return _jspx_dependants;
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;

    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;
      _jspx_resourceInjector = (org.glassfish.jsp.api.ResourceInjector) application.getAttribute("com.sun.appserv.jsp.resource.injector");

      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/baguettebox.js/1.8.1/baguetteBox.min.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"gallery-grid.css\"\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js\"></script>\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\">\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\n");
      out.write("<link href='https://fonts.googleapis.com/css?family=Autour One' rel='stylesheet'>\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n");
      out.write("<link rel=\"stylesheet\" href=\"css/hellostyl_2.css\">\n");
      out.write(" <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\"></script>\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\"></script>\n");
      out.write("  <style>\n");
      out.write("  #myBtn {\n");
      out.write("  display: none;\n");
      out.write("  position: fixed;\n");
      out.write("  bottom: 20px;\n");
      out.write("  right: 30px;\n");
      out.write("  z-index: 99;\n");
      out.write("  font-size: 18px;\n");
      out.write("  border: none;\n");
      out.write("  outline: none;\n");
      out.write("  background-color:red;\n");
      out.write("  color: white;\n");
      out.write("  cursor: pointer;\n");
      out.write("  padding: 15px;\n");
      out.write("border-radius: 50%;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#myBtn:hover {\n");
      out.write("  background-color: #555;\n");
      out.write("} \n");
      out.write("\n");
      out.write("#slideshowdiv1 {\n");
      out.write("\n");
      out.write("  outline: 1px solid #008080;\n");
      out.write("  height : 60px;\n");
      out.write("  width : 730px;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body onload=\"slideShow(); stopShow();\">\n");
      out.write("<button onclick=\"topFunction()\" id=\"myBtn\" title=\"Go to top\" style=\"background-color:blue;\"><i class=\"fa fa-arrow-up\"></i></button>\n");
      out.write("<script>\n");
      out.write("// When the user scrolls down 20px from the top of the document, show the button\n");
      out.write("window.onscroll = function() {scrollFunction()};\n");
      out.write("\n");
      out.write("function scrollFunction() {\n");
      out.write("  if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\n");
      out.write("    document.getElementById(\"myBtn\").style.display = \"block\";\n");
      out.write("  } else {\n");
      out.write("    document.getElementById(\"myBtn\").style.display = \"none\";\n");
      out.write("  }\n");
      out.write("}\n");
      out.write("\n");
      out.write("// When the user clicks on the button, scroll to the top of the document\n");
      out.write("function topFunction() {\n");
      out.write("  document.body.scrollTop = 0;\n");
      out.write("  document.documentElement.scrollTop = 0;\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("  <script type = \"text/javascript\">\n");
      out.write("   // creates array and holds images\n");
      out.write("var imageArray = ['Pancake1.png', 'Pancake2.png', 'Pancake3.png', 'Pancake4.png'\n");
      out.write(" , 'Pancake5.png','Pancake6.png','Pancake7.png','Pancake8.png','Pancake9.png',\n");
      out.write("   'Pancake10.png','Pancake11.png','Pancake12.png','Pancake13.png','Pancake14.png',\n");
      out.write("   'Pancake15.png','Pancake16.png','Pancake17.png','Pancake24.png'\n");
      out.write("   ,'Pancake19.png','Pancake20.png','Pancake21.png','Pancake22.png'\n");
      out.write("   ,'Pancake23.png'];\n");
      out.write("var steps = [\"Initially element given for sorting are:\",\n");
      out.write("\"Determine the maximum element in the array and index of maximum element\",\n");
      out.write("\"After determining the maximum element in the array, function flip is used to flip/reverse array from 0 to index of the maximum element\",\n");
      out.write("\"The array is reversed from 0 to maxSize-1, so that maximum element is move dto the end of array\",\n");
      out.write("\"Select sthe maximum element from the unsorted array and it's index\",\n");
      out.write("\"function flip is used to flip/reverse array from 0 to index of the maximum element\",\n");
      out.write("\"The array is reversed from 0 to maxSize-1, so that maximum element is move dto the end of array\",\n");
      out.write("\"Select the maximum element from the unsorted array and it's index\",\n");
      out.write("\"function flip is used to flip/reverse array from 0 to index of the maximum element\",\n");
      out.write("\"The array is reversed from 0 to maxSize-1, so that maximum element is move dto the end of array\",\n");
      out.write("\"Select the maximum element from the unsorted array and it's index\",\n");
      out.write("\"function flip is used to flip/reverse array from 0 to index of the maximum element\",\n");
      out.write("\"The array is reversed from 0 to maxSize-1, so that maximum element is move dto the end of array\",\n");
      out.write("\"Select the maximum element from the unsorted array and it's index\",\n");
      out.write("\"function flip is used to flip/reverse array from 0 to index of the maximum element\",\n");
      out.write("\"The array is reversed from 0 to maxSize-1, so that maximum element is move dto the end of array\",\n");
      out.write("\"Select the maximum element from the unsorted array and it's index\",\n");
      out.write("\"function flip is used to flip/reverse array from 0 to index of the maximum element\",\n");
      out.write("\"The array is reversed from 0 to maxSize-1, so that maximum element is move dto the end of array\",\n");
      out.write("\"Select the maximum element from the unsorted array and it's index\",\n");
      out.write("\"function flip is used to flip/reverse array from 0 to index of the maximum element\",\n");
      out.write("\"The array is reversed from 0 to last element, so that maximum element is move dto the end of array\",\n");
      out.write("\"Finally a sorted array is obtained\"\n");
      out.write("];\n");
      out.write("// set the array to start at 0\n");
      out.write("var i = 0;\n");
      out.write("\n");
      out.write("var speed = 2000;\n");
      out.write("var speed1 = 2000;\n");
      out.write("var minSpeed = 3000;\n");
      out.write("var maxSpeed = 0;\n");
      out.write("var pre=0;\n");
      out.write("// create function 'slideShow'\n");
      out.write("function slideShow() {\n");
      out.write("// creates variable 'div' to load images into a div selected using 'getElementById'\n");
      out.write("var div = document.getElementById('slideshowdiv');\n");
      out.write("div.innerHTML = '<img src=\"' + imageArray[i] + '\" />';\n");
      out.write("var div1 = document.getElementById('slideshowdiv1');\n");
      out.write("div1.innerHTML = steps[i];\n");
      out.write("\n");
      out.write("//increment i by 1\n");
      out.write("i++;\n");
      out.write("\n");
      out.write("// checks if i is greater than or equal to the length\n");
      out.write("\n");
      out.write("// every 2 seconds change image\n");
      out.write("timer = setTimeout('slideShow()', speed);\n");
      out.write("if( i == imageArray.length )\n");
      out.write("\tstopShow();\n");
      out.write("};\n");
      out.write("function slidenext() {\n");
      out.write("// creates variable 'div' to load images into a div selected using 'getElementById'\n");
      out.write("i = (i >= imageArray.length - 1) ? (imageArray.length-1) : i + 1;\n");
      out.write("var div = document.getElementById('slideshowdiv');\n");
      out.write("\n");
      out.write("div.innerHTML = '<img src=\"' + imageArray[i] + '\" />';\n");
      out.write("var div1 = document.getElementById('slideshowdiv1');\n");
      out.write("div1.innerHTML = steps[i];\n");
      out.write("\n");
      out.write("stopShow();\n");
      out.write("};\n");
      out.write("function slidepre() {\n");
      out.write("// creates variable 'div' to load images into a div selected using 'getElementById'\n");
      out.write("if(i > pre)\n");
      out.write("    i--;\n");
      out.write(" i = (i > 0) ? i - 1 : 0;\n");
      out.write(" var div = document.getElementById('slideshowdiv');\n");
      out.write("\n");
      out.write("div.innerHTML = '<img src=\"' + imageArray[i] + '\" />';\n");
      out.write("var div1 = document.getElementById('slideshowdiv1');\n");
      out.write("div1.innerHTML = steps[i];\n");
      out.write("\n");
      out.write("stopShow();\n");
      out.write("};\n");
      out.write("function displayNextImage() {\n");
      out.write("              \n");
      out.write("\t\t\t  timer=setTimeout('slidenext()',200);\n");
      out.write("          };\n");
      out.write("\n");
      out.write("          function displayPreviousImage() {\n");
      out.write("             \n");
      out.write("\t\t\t \t\t\t  timer=setTimeout('slidepre()',200);\n");
      out.write("\n");
      out.write("          };\n");
      out.write("function stopShow() {\n");
      out.write("    clearTimeout(timer);\n");
      out.write("};\n");
      out.write("function playShow() {\n");
      out.write("    if( i >= imageArray.length - 1 )\n");
      out.write("\ti = 0;\n");
      out.write("    timer = setTimeout('slideShow()', speed);\n");
      out.write("};\n");
      out.write("function increase() {\n");
      out.write("  if(speed -100 > maxSpeed )\n");
      out.write("    speed = 1500; \n");
      out.write("};\n");
      out.write("function decrease() {\n");
      out.write("  if(speed +100 <= minSpeed)      \n");
      out.write("    speed = 4500;\n");
      out.write("};\n");
      out.write("function normal() {\n");
      out.write("  if(speed < speed1|| speed > speed1)      \n");
      out.write("    speed = 3000;\n");
      out.write("};\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<div class=\"nav1\">\n");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-light bg-light navbar-fixed-left\">\n");
      out.write("  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n");
      out.write("    <span class=\"navbar-toggler-icon\"></span>\n");
      out.write("  </button>\n");
      out.write("\n");
      out.write("  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n");
      out.write("    <ul class=\"navbar-nav m-auto\">\n");
      out.write("      <li class=\"nav-item\">\n");
      out.write("        <a class=\"nav-link\" href=\"secondpage.html\">Dashboard</a>\n");
      out.write("      </li>\n");
      out.write("      <li class=\"nav-item\">\n");
      out.write("        <a class=\"nav-link\" href=\"#tut\">Tutorial</a>\n");
      out.write("      </li>\n");
      out.write("\t  <li class=\"nav-item\">\n");
      out.write("        <a class=\"nav-link\" href=\"#algo\">Algorithm</a>\n");
      out.write("      </li>\n");
      out.write("\t  <li class=\"nav-item\">\n");
      out.write("        <a class=\"nav-link\" href=\"#visu\">Visualization</a>\n");
      out.write("      </li>\n");
      out.write("\t  <li class=\"nav-item\">\n");
      out.write("        <a class=\"nav-link\" href=\"logout.jsp\">Logout</a>\n");
      out.write("      </li>\n");
      out.write("    </ul>\n");
      out.write("    </div>\n");
      out.write("  </nav>\n");
      out.write("</div>\n");
      out.write("</br></br>\n");
      out.write("<div class=\"container\" style=\"background-color:#e6ffe6;border-radius:7px;\"id=\"tut\"></br>\n");
      out.write("<b></b><h2 style=\"font-size:23px;color:black;text-align:center\">Description</h2></b>\n");
      out.write("<p class=\"card-text\" style=\"font-size:17px;\" >Pancake sorting is the colloquial term for the mathematical problem of sorting a\n");
      out.write(" disordered stack of pancakes in order of size when a spatula can be inserted at any point in the stack and used to flip all \n");
      out.write(" pancakes above it. A pancake number is the minimum number of flips required for a given number of pancakes. In this form, the\n");
      out.write(" problem was first discussed by American geometer Jacob E. Goodman. It is a variation of the sorting problem in which the only\n");
      out.write(" allowed operation is to reverse the elements of some prefix of the sequence. Unlike a traditional sorting algorithm, which \n");
      out.write(" attempts to sort with the fewest comparisons possible, the goal is to sort the sequence in as few reversals as possible.\n");
      out.write(" A variant of the problem is concerned with burnt pancakes, where each pancake has a burnt side and all pancakes must, \n");
      out.write(" in addition, end up with the burnt side on bottom.\n");
      out.write("<br>\n");
      out.write("<br>\n");
      out.write("</p>\n");
      out.write("<b></b><h2 style=\"font-size:23px;color:black;text-align:center\">Complexity</h2></b>\n");
      out.write("<p class=\"card-text\" style=\"font-size:17px;\" >\n");
      out.write("<b>Case 1)</b> O(n) (Best case) The minimum number of flips required to sort any\n");
      out.write(" stack of n pancakes has been shown to lie between 15/14n and 18/11n (approximately 1.07n and 1.64n) but the exact value is \n");
      out.write(" not known. \n");
      out.write("<br></br> \n");
      out.write("<b>Case 2)</b> O(n) (Worst case) In the worst case the stack will be alternating smallest to largest like \n");
      out.write("[0, 9, 1, 8, 2, 7, 3, 6, 5, 4].\n");
      out.write(" In this case we will have to flip 9 to the top, then to the bottom, or two flips. We then continue with 8, 7, 6, etc. \n");
      out.write(" each one requiring two flips to get the pancake to its final sorted location. Meaning it will take a maximum 2n ? 3 flips, \n");
      out.write(" n being the number of pancakes in the stack and ?-3? because the final pancake will be in the appropriate position after the \n");
      out.write(" second to last flip and the second to last flip will only occur once (no need to flip up then down)\n");
      out.write("</br></br>\n");
      out.write("<b>Case 3)</b> O(n) (Average case) Complexity of average case cannot be greater than worst case complexity.\n");
      out.write("</br></br>\n");
      out.write("\n");
      out.write("\n");
      out.write("</p>\n");
      out.write("<b></b><h2 style=\"font-size:23px;color:black;text-align:center\">History</h2></b>\n");
      out.write("<p class=\"card-text\" style=\"font-size:17px;\" >\n");
      out.write("The pancake sorting problem was first posed by Jacob E. Goodman, writing under the pseudonym \"Harry Dweighter\" (harried waiter)\n");
      out.write(" Although seen more often as an educational device, pancake sorting also appears in applications in parallel processor networks\n");
      out.write(" , in which it can provide an effective routing algorithm between processors. The problem is notable as the topic of the only \n");
      out.write(" well-known mathematics paper by Microsoft founder Bill Gates (as William Gates), entitled \"Bounds for Sorting by Prefix \n");
      out.write(" Reversal\". Published in 1979, it describes an efficient algorithm for pancake sorting.In addition, the most notable paper \n");
      out.write(" published by Futurama co-creator David X. Cohen (as David S. Cohen) concerned the burnt pancake problem. Their collaborators \n");
      out.write(" were Christos Papadimitriou (then at Harvard, now at Columbia) and Manuel Blum (then at Berkeley, now at Carnegie Mellon \n");
      out.write(" University), respectively. The connected problems of signed sorting by reversals and sorting by reversals were also studied \n");
      out.write(" more recently. Whereas efficient exact algorithms have been found for the signed sorting by reversals, the problem of sorting \n");
      out.write(" by reversals has been proven to be hard even to approximate to within certain constant factor, and also proven to be \n");
      out.write(" approximable in polynomial time to within the approximation factor 1.375.\n");
      out.write(" </br></br>\n");
      out.write("</p>\n");
      out.write("</div>\n");
      out.write("</br></br>\n");
      out.write("<div class=\"container\" style=\"background-color:#e6ffe6;border-radius:7px;\"id=\"algo\"></br>\n");
      out.write("<b></b><h1 style=\"font-size:23px;color:black;text-align:center\">Algorithm</h1></b>\n");
      out.write("<p class=\"card-text\" style=\"font-size:17px;\" >The algorithm for Pancake sort is shown as: \n");
      out.write("</br></br>\n");
      out.write("int pancakeSort(int *arr, int n) </br>\n");
      out.write("{ </br>\n");
      out.write("    // Start from the complete </br>\n");
      out.write("    // array and one by one  </br>\n");
      out.write("    // reduce current size  </br>\n");
      out.write("    // by one </br>\n");
      out.write("    for (int curr_size = n; curr_size > 1; --curr_size) </br> \n");
      out.write("    { </br>\n");
      out.write("        // Find index of the </br>  \n");
      out.write("        // maximum element in </br>  \n");
      out.write("        // arr[0..curr_size-1] </br>\n");
      out.write("        int mi = findMax(arr, curr_size); </br>\n");
      out.write("  <br/></br>\n");
      out.write("        // Move the maximum </br>\n");
      out.write("        // element to end of  </br>\n");
      out.write("        // current array if </br>\n");
      out.write("        // it's not already </br>\n");
      out.write("        // at the end </br>\n");
      out.write("        if (mi != curr_size-1) </br>\n");
      out.write("        { </br>\n");
      out.write("            // To move at the end, </br> \n");
      out.write("            // first move maximum  </br>\n");
      out.write("            // number to beginning  </br>\n");
      out.write("            flip(arr, mi); </br>\n");
      out.write("  \n");
      out.write("            // Now move the maximum </br> \n");
      out.write("            // number to end by  </br>\n");
      out.write("            // reversing current array </br> \n");
      out.write("            flip(arr, curr_size-1); </br>\n");
      out.write("\t\t\t</br>\n");
      out.write("        } </br>\n");
      out.write("    } </br>\n");
      out.write("} </br>\n");
      out.write("</br></br>\n");
      out.write("<br>\n");
      out.write("<br>\n");
      out.write("</p>\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("</br/></br>\n");
      out.write("<div class=\"container\" style=\"background-color:#e6ffe6;border-radius:7px;\"id=\"visu\"></br>\n");
      out.write("<b></b><h1 style=\"font-size:23px;color:black;text-align:center\">Visualization</h1></b>\n");
      out.write("<div class=\"btn-group\">\n");
      out.write("\n");
      out.write("    <button type=\"button\" class=\"btn btn-info btn-sm\" onclick=\"decrease()\">Slow</button>\n");
      out.write("    <button type=\"button\" class=\"btn btn-default btn-sm\" onclick=\"normal()\">Normal</button>\n");
      out.write("    <button type=\"button\" class=\"btn btn-warning btn-sm\" onclick=\"increase()\">Fast</button>\n");
      out.write("\t</div>\n");
      out.write("<br>\n");
      out.write("<br>\n");
      out.write("<div id=\"slideshowdiv\"></div>\n");
      out.write("<br>\n");
      out.write("<b>Steps :</b>\n");
      out.write("<br>\n");
      out.write("<div id=\"slideshowdiv1\"></div>\n");
      out.write("<div class=\"change\">\n");
      out.write("<br>\n");
      out.write("<div class=\"btn-group\">\n");
      out.write(" <button type=\"button\" class=\"btn btn-primary btn-sm\" onclick=\"displayPreviousImage()\">Previous</button>\n");
      out.write("    <button type=\"button\" class=\"btn btn-danger btn-sm\" onclick=\"stopShow()\">Stop</button>\n");
      out.write("    <button type=\"button\" class=\"btn btn-success btn-sm\" onclick=\"playShow()\">Play</button>\n");
      out.write("\t<button type=\"button\" class=\"btn btn-primary btn-sm\" onclick=\"displayNextImage()\">Next</button>\n");
      out.write("  </div>\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("<br>\n");
      out.write("<br>\n");
      out.write("</div>\n");
      out.write("<script src=\"js/jquery.js\"></script>\n");
      out.write("<!--<script src=\"//code.jquery.com/jquery.min.js\"></script>-->\n");
      out.write("<script src=\"js/bootstrap.min.js\"></script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          out.clearBuffer();
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
