package org.apache.jsp.Student_0020Zone.bead;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class bead_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();

  private static java.util.List<String> _jspx_dependants;

  private org.glassfish.jsp.api.ResourceInjector _jspx_resourceInjector;

  public java.util.List<String> getDependants() {
    return _jspx_dependants;
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;

    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;
      _jspx_resourceInjector = (org.glassfish.jsp.api.ResourceInjector) application.getAttribute("com.sun.appserv.jsp.resource.injector");

      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/baguettebox.js/1.8.1/baguetteBox.min.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"gallery-grid.css\"\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js\"></script>\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\">\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\n");
      out.write("<link href='https://fonts.googleapis.com/css?family=Autour One' rel='stylesheet'>\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n");
      out.write("<link rel=\"stylesheet\" href=\"css/hellostyl_2.css\">\n");
      out.write(" <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\"></script>\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\"></script>\n");
      out.write("  <style>\n");
      out.write("  #myBtn {\n");
      out.write("  display: none;\n");
      out.write("  position: fixed;\n");
      out.write("  bottom: 20px;\n");
      out.write("  right: 30px;\n");
      out.write("  z-index: 99;\n");
      out.write("  font-size: 18px;\n");
      out.write("  border: none;\n");
      out.write("  outline: none;\n");
      out.write("  background-color:red;\n");
      out.write("  color: white;\n");
      out.write("  cursor: pointer;\n");
      out.write("  padding: 15px;\n");
      out.write("border-radius: 50%;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#myBtn:hover {\n");
      out.write("  background-color: #555;\n");
      out.write("} \n");
      out.write("\n");
      out.write("#slideshowdiv1 {\n");
      out.write("\n");
      out.write("  outline: 1px solid #008080;\n");
      out.write("  height : 60px;\n");
      out.write("  width : 905px;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body onload=\"slideShow(); stopShow();\">\n");
      out.write("<button onclick=\"topFunction()\" id=\"myBtn\" title=\"Go to top\" style=\"background-color:blue;\"><i class=\"fa fa-arrow-up\"></i></button>\n");
      out.write("<script>\n");
      out.write("// When the user scrolls down 20px from the top of the document, show the button\n");
      out.write("window.onscroll = function() {scrollFunction()};\n");
      out.write("\n");
      out.write("function scrollFunction() {\n");
      out.write("  if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\n");
      out.write("    document.getElementById(\"myBtn\").style.display = \"block\";\n");
      out.write("  } else {\n");
      out.write("    document.getElementById(\"myBtn\").style.display = \"none\";\n");
      out.write("  }\n");
      out.write("}\n");
      out.write("\n");
      out.write("// When the user clicks on the button, scroll to the top of the document\n");
      out.write("function topFunction() {\n");
      out.write("  document.body.scrollTop = 0;\n");
      out.write("  document.documentElement.scrollTop = 0;\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("  <script type = \"text/javascript\">\n");
      out.write("   // creates array and holds images\n");
      out.write("var imageArray = ['1.png','2.png','3.png','b4.png',\n");
      out.write("'b5.png','b6.png','b7.png','b8.png','b9.png','b10.png',\n");
      out.write("'b11.png','b12.png'];\n");
      out.write("var steps = \n");
      out.write("[\"For sorting initially following elements are given:\",\n");
      out.write("\"In bead sort the bead moves to the string below thier original  string  if there is no bead in the string below them due to gravity\",\n");
      out.write("\"The beads which don't have support below them because of absence of bead in the string below them will move down.(These beads are indicated in different colours)\",\n");
      out.write("\"The beads which don't have support below them because of absence of bead in the string below them will move down.(These beads are indicated in different colours)\",\n");
      out.write("\"The beads which don't have support below them because of absence of bead in the string below them will move down.(These beads are indicated in different colours)\",\n");
      out.write("\"The beads which don't have support below them because of absence of bead in the string below them will move down.(These beads are indicated in different colours)\",\n");
      out.write("\"The beads which don't have support below them because of absence of bead in the string below them will move down.(These beads are indicated in different colours)\",\n");
      out.write("\"The beads which don't have support below them because of absence of bead in the string below them will move down.(These beads are indicated in different colours\",\n");
      out.write("\"The beads which don't have support below them because of absence of bead in the string below them will move down.(These beads are indicated in different colours\",\n");
      out.write("\"The beads which don't have support below them because of absence of bead in the string below them will move down.(These beads are indicated in different colours\",\n");
      out.write("\"The beads which don't have support below them because of absence of bead in the string below them will move down.(These beads are indicated in different colours\",\n");
      out.write("\"Finally the elements are sorted in the given order\"\n");
      out.write("];\n");
      out.write("// set the array to start at 0\n");
      out.write("var i = 0;\n");
      out.write("\n");
      out.write("var speed = 2000;\n");
      out.write("var speed1 = 2000;\n");
      out.write("var minSpeed = 3000;\n");
      out.write("var maxSpeed = 0;\n");
      out.write("var pre = 0;\n");
      out.write("// create function 'slideShow'\n");
      out.write("function slideShow() {\n");
      out.write("// creates variable 'div' to load images into a div selected using 'getElementById'\n");
      out.write("var div = document.getElementById('slideshowdiv');\n");
      out.write("div.innerHTML = '<img src=\"' + imageArray[i] + '\" />';\n");
      out.write("var div1 = document.getElementById('slideshowdiv1');\n");
      out.write("div1.innerHTML = steps[i];\n");
      out.write("\n");
      out.write("//increment i by 1\n");
      out.write("i++;\n");
      out.write("\n");
      out.write("// checks if i is greater than or equal to the length\n");
      out.write("\n");
      out.write("// every 2 seconds change image\n");
      out.write("timer = setTimeout('slideShow()', speed);\n");
      out.write("if( i == imageArray.length )\n");
      out.write("\tstopShow();\n");
      out.write("};\n");
      out.write("function slidenext() {\n");
      out.write("// creates variable 'div' to load images into a div selected using 'getElementById'\n");
      out.write("i = (i >= imageArray.length - 1) ? (imageArray.length-1) : i + 1;\n");
      out.write("var div = document.getElementById('slideshowdiv');\n");
      out.write("\n");
      out.write("div.innerHTML = '<img src=\"' + imageArray[i] + '\" />';\n");
      out.write("var div1 = document.getElementById('slideshowdiv1');\n");
      out.write("div1.innerHTML = steps[i];\n");
      out.write("\n");
      out.write("stopShow();\n");
      out.write("};\n");
      out.write("function slidepre() {\n");
      out.write("// creates variable 'div' to load images into a div selected using 'getElementById'\n");
      out.write(" if(i > pre)\n");
      out.write("    i--;\n");
      out.write("        i = (i > 0) ? i - 1 : 0;\n");
      out.write("var div = document.getElementById('slideshowdiv');\n");
      out.write("\n");
      out.write("div.innerHTML = '<img src=\"' + imageArray[i] + '\" />';\n");
      out.write("var div1 = document.getElementById('slideshowdiv1');\n");
      out.write("div1.innerHTML = steps[i];\n");
      out.write("\n");
      out.write("stopShow();\n");
      out.write("};\n");
      out.write("function displayNextImage() {\n");
      out.write("              \n");
      out.write("\t\t\t  timer=setTimeout('slidenext()',200);\n");
      out.write("          };\n");
      out.write("\n");
      out.write("          function displayPreviousImage() {\n");
      out.write("             \n");
      out.write("\t\t\t \t\t\t  timer=setTimeout('slidepre()',200);\n");
      out.write("\n");
      out.write("          };\n");
      out.write("function stopShow() {\n");
      out.write("    clearTimeout(timer);\n");
      out.write("};\n");
      out.write("function playShow() {\n");
      out.write("    if( i >= imageArray.length - 1 )\n");
      out.write("\ti = 0;\n");
      out.write("    timer = setTimeout('slideShow()', 200);\n");
      out.write("};\n");
      out.write("function increase() {\n");
      out.write("  if(speed -100 > maxSpeed )\n");
      out.write("    speed = 1500; \n");
      out.write("};\n");
      out.write("function decrease() {\n");
      out.write("  if(speed +100 <= minSpeed)      \n");
      out.write("    speed = 4500;\n");
      out.write("};\n");
      out.write("function normal() {\n");
      out.write("  if(speed < speed1|| speed > speed1)      \n");
      out.write("    speed = 3000;\n");
      out.write("};\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<div class=\"nav1\">\n");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-light bg-light navbar-fixed-left\">\n");
      out.write("  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n");
      out.write("    <span class=\"navbar-toggler-icon\"></span>\n");
      out.write("  </button>\n");
      out.write("\n");
      out.write("  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n");
      out.write("    <ul class=\"navbar-nav m-auto\">\n");
      out.write("      <li class=\"nav-item\">\n");
      out.write("        <a class=\"nav-link\" href=\"secondpage.html\">Dashboard</a>\n");
      out.write("      </li>\n");
      out.write("      <li class=\"nav-item\">\n");
      out.write("        <a class=\"nav-link\" href=\"#tut\">Tutorial</a>\n");
      out.write("      </li>\n");
      out.write("\t  <li class=\"nav-item\">\n");
      out.write("        <a class=\"nav-link\" href=\"#algo\">Algorithm</a>\n");
      out.write("      </li>\n");
      out.write("\t  <li class=\"nav-item\">\n");
      out.write("        <a class=\"nav-link\" href=\"#visu\">Visualization</a>\n");
      out.write("      </li>\n");
      out.write("\t  <li class=\"nav-item\">\n");
      out.write("        <a class=\"nav-link\" href=\"logout.jsp\">Logout</a>\n");
      out.write("      </li>\n");
      out.write("    </ul>\n");
      out.write("    </div>\n");
      out.write("  </nav>\n");
      out.write("</div>\n");
      out.write("</br></br>\n");
      out.write("<div class=\"container\" style=\"background-color:#e6ffe6;border-radius:7px;\"id=\"tut\"></br>\n");
      out.write("<b></b><h2 style=\"font-size:23px;color:black;text-align:center\">Description</h2></b>\n");
      out.write("<p class=\"card-text\" style=\"font-size:17px;\" >Bead sort, also called gravity sort, is a natural sorting algorithm, developed by Joshua J. Arulanandham, Cristian S. Calude \n");
      out.write("and Michael J. Dinneen in 2002, and published in The Bulletin of the European Association for Theoretical Computer Science. \n");
      out.write("Both digital and analog hardware implementations of bead sort can achieve a sorting time of O(n); however, the implementation of\n");
      out.write(" this algorithm tends to be significantly slower in software and can only be used to sort lists of positive integers. Also, it \n");
      out.write(" would seem that even in the best case, the algorithm requires O(n2) space.  \n");
      out.write("\n");
      out.write("\n");
      out.write("</p>\n");
      out.write("<b></b><h2 style=\"font-size:23px;color:black;text-align:center\">Complexity</h2></b>\n");
      out.write("<p class=\"card-text\" style=\"font-size:17px;\" >\n");
      out.write("<b>Case 1)</b> \n");
      out.write("O(1): The beads are all moved simultaneously in the same time unit. This is an abstract complexity, and cannot be implemented in \n");
      out.write("practice.\n");
      out.write("<br> \n");
      out.write("<b>Case 2)</b> \n");
      out.write("O( n ^ 1/2 ): In a realistic physical model that uses gravity, the time it takes to let \n");
      out.write("the beads fall is proportional to the square root of the maximum height, which is proportional to n.\n");
      out.write("</br>\n");
      out.write("<b>Case 3)</b> \n");
      out.write("O(n): The beads are moved one row at a time. This is the case used in the analog and digital hardware solutions.\n");
      out.write("</br>\n");
      out.write("<b>Case 4)</b> \n");
      out.write("O(S): where S is the sum of the integers in the input set: Each bead is moved individually. This is the case when\n");
      out.write(" bead sort is implemented without a mechanism to assist in finding empty spaces below the beads, such as in software \n");
      out.write(" implementations.\n");
      out.write("<br>\n");
      out.write("</p>\n");
      out.write("<b></b><h2 style=\"font-size:23px;color:black;text-align:center\">Use</h2></b>\n");
      out.write("<p class=\"card-text\" style=\"font-size:17px;\" >\n");
      out.write("A cellular automaton (CA) is a suitable choice for simulating natural physical systems because it is massively parallel, \n");
      out.write("self-organizing and is driven by a set of simple, local rules.\n");
      out.write("In its simplest form, a CA can be considered a homogeneous array of cells in one, two or more dimensions. Each cell has a ?nite \n");
      out.write("discrete state. Cells communicate with a number of local neighbors and update synchronously according to deterministic rules.\n");
      out.write("A cell updates its state depending on its current state and its neighbor states. When modeling physical systems using cellular \n");
      out.write("automata, space is treated as having ?nitely many locations per unit of volume. Each location is represented by a cell and a \n");
      out.write("state is associated with each cell.\n");
      out.write("</br></br>\n");
      out.write("</p>\n");
      out.write("</div>\n");
      out.write("</br></br>\n");
      out.write("<div class=\"container\" style=\"background-color:#e6ffe6;border-radius:7px;\"id=\"algo\"></br>\n");
      out.write("<b></b><h1 style=\"font-size:23px;color:black;text-align:center\">Algorithm</h1></b>\n");
      out.write("<p class=\"card-text\" style=\"font-size:17px;\" >The algorithm for bead sort is shown as: \n");
      out.write("</br></br>\n");
      out.write("void beadSort(int *a, int len)</br> \n");
      out.write("{ </br>\n");
      out.write("    // Find the maximum element</br> \n");
      out.write("    int max = a[0]; </br>\n");
      out.write("    for (int i = 1; i < len; i++)</br> \n");
      out.write("        if (a[i] > max) </br>\n");
      out.write("           max = a[i]; </br>\n");
      out.write("  \n");
      out.write("    // allocating memory </br>\n");
      out.write("    unsigned char beads[max*len];</br> \n");
      out.write("    memset(beads, 0, sizeof(beads)); </br>\n");
      out.write("  \n");
      out.write("    // mark the beads </br>\n");
      out.write("    for (int i = 0; i < len; i++)</br> \n");
      out.write("        for (int j = 0; j < a[i]; j++)</br> \n");
      out.write("            BEAD(i, j) = 1; </br>\n");
      out.write("  \n");
      out.write("    for (int j = 0; j < max; j++) </br>\n");
      out.write("    { </br>\n");
      out.write("        // count how many beads are on each post>/br> \n");
      out.write("        int sum = 0; </br>\n");
      out.write("        for (int i=0; i < len; i++)</br> \n");
      out.write("        { </br>\n");
      out.write("            sum += BEAD(i, j); </br>\n");
      out.write("            BEAD(i, j) = 0; </br>\n");
      out.write("        } </br>\n");
      out.write("  \n");
      out.write("        // Move beads down </br>\n");
      out.write(" \n");
      out.write("        for (int i = len - sum; i < len; i++) </br>\n");
      out.write(" \n");
      out.write("            BEAD(i, j) = 1;</br>\n");
      out.write("  \n");
      out.write("    }</br>\n");
      out.write("  \n");
      out.write("  \n");
      out.write("    // Put sorted values in array using beads</br>\n");
      out.write("  \n");
      out.write("    for (int i = 0; i < len; i++)</br>\n");
      out.write("  \n");
      out.write("    {</br>\n");
      out.write("  \n");
      out.write("        int j;</br>\n");
      out.write("  \n");
      out.write("        for (j = 0; j < max && BEAD(i, j); j++);</br>\n");
      out.write("  \n");
      out.write("  \n");
      out.write("        a[i] = j;</br>\n");
      out.write("  \n");
      out.write("    }</br>\n");
      out.write("  \n");
      out.write("}</br>\n");
      out.write("<br>\n");
      out.write("<br>\n");
      out.write("</p>\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("</br/></br>\n");
      out.write("<div class=\"container\" style=\"background-color:#e6ffe6;border-radius:7px;\"id=\"visu\"></br>\n");
      out.write("<b></b><h1 style=\"font-size:23px;color:black;text-align:center\">Visualization</h1></b>\n");
      out.write("<div class=\"btn-group\">\n");
      out.write("\n");
      out.write("    <button type=\"button\" class=\"btn btn-info btn-sm\" onclick=\"decrease()\">Slow</button>\n");
      out.write("    <button type=\"button\" class=\"btn btn-default btn-sm\" onclick=\"normal()\">Normal</button>\n");
      out.write("    <button type=\"button\" class=\"btn btn-warning btn-sm\" onclick=\"increase()\">Fast</button>\n");
      out.write("\t</div>\n");
      out.write("<br>\n");
      out.write("<br>\n");
      out.write("<div id=\"slideshowdiv\"></div>\n");
      out.write("<br>\n");
      out.write("<b>Steps :</b>\n");
      out.write("<br>\n");
      out.write("<div id=\"slideshowdiv1\"></div>\n");
      out.write("<div class=\"change\">\n");
      out.write("<br>\n");
      out.write("<div class=\"btn-group\">\n");
      out.write(" <button type=\"button\" class=\"btn btn-primary btn-sm\" onclick=\"displayPreviousImage()\">Previous</button>\n");
      out.write("    <button type=\"button\" class=\"btn btn-danger btn-sm\" onclick=\"stopShow()\">Stop</button>\n");
      out.write("    <button type=\"button\" class=\"btn btn-success btn-sm\" onclick=\"playShow()\">Play</button>\n");
      out.write("\t<button type=\"button\" class=\"btn btn-primary btn-sm\" onclick=\"displayNextImage()\">Next</button>\n");
      out.write("  </div>\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("<br>\n");
      out.write("<br>\n");
      out.write("</div>\n");
      out.write("<script src=\"js/jquery.js\"></script>\n");
      out.write("<!--<script src=\"//code.jquery.com/jquery.min.js\"></script>-->\n");
      out.write("<script src=\"js/bootstrap.min.js\"></script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          out.clearBuffer();
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
